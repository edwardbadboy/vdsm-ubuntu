# Copyright IBM, Corp. 2012
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#
# Refer to the README and COPYING files for full details of the license
#


import os.path

from vdsm import netinfo
from vdsm.tool import expose
from vdsm.utils import execCmd


EX_MODPROBE = '@MODPROBE_PATH@'


def _exec_command(argv):
    """
    This function executes a given shell command.
    """
    rc, out, err = execCmd(argv, raw=True)
    if rc != 0:
        raise Exception("Execute command %s failed: %s" % (argv, err))


def _enable_bond_dev():
    # @ENGINENAME@ currently assumes that all bonding devices pre-exist
    with open(netinfo.BONDING_MASTERS) as f:
        existing = set(f.read().split())
    for bond in netinfo.REQUIRED_BONDINGS - existing:
        with open(netinfo.BONDING_MASTERS, 'w') as f:
            f.write('+%s\n' % bond)


def _enable_softdog():
    if not os.path.exists('/dev/watchdog'):
        _exec_command([EX_MODPROBE, 'softdog'])


@expose('load-needed-modules')
def load_needed_modules():
    """
    Load needed modules
    """

    for mod in ['bridge', 'tun', 'bonding', '8021q']:
        _exec_command([EX_MODPROBE, mod])
    _enable_bond_dev()
    _enable_softdog()
